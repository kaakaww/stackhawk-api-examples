input {
	beats {
		port => 5044
	}

	tcp {
		port => 50000
	}
	http {
		port => 9080
		id => "sh_webhooks"
		password => "example_password_yo!"
		user => "hawk_hook"
		type => "stackahwk_webhook_logs"
	}
	exec {
		command => "python3 /usr/share/logstash/scripts/auditlog_pull.py"
		interval => 300
		codec => "json_lines"
		id => "stackhawk_audit_logs"
		type => "stackhawk_audit_logs"
	}
	exec {
	command => "python3 /usr/share/logstash/scripts/scanlog_pull.py"
	interval => 300
	codec => "json_lines"
	id => "stackhawk_scan_logs"
	type => "stackhawk_scan_logs"
	}
}

## Add your filters / logstash plugins configuration here
filter {
	if [type] == "stackhawk_audit_logs" {
		date {
			match => [ "timestamp", "UNIX_MS"]
		}
		mutate {
			convert => {
				"[payload][pathsCount]" => "integer"
			}
		}
	}
	else if [type] == "stackhawk_scan_logs" {
		date {
			match => [ "[scan][timestamp]", "UNIX_MS"]
		}
		json {
		    source => "[scan][alertStats][alertStatusStats]"
		    target => "[scan][alertStats][alertStatusStats]"
        }
	}
}

output {
	if [type] == "stackhawk_audit_logs" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "logstash_internal"
			password => "${LOGSTASH_INTERNAL_PASSWORD}"
			index => "stackhawk_audit_logs-%{+YYYY.MM}"
		}

	}
	else if [type] == "stackhawk_scan_logs" {
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "logstash_internal"
			password => "${LOGSTASH_INTERNAL_PASSWORD}"
			index => "stackhawk_scan_logs-%{+YYYY.MM}"
			document_id => "%{[scan][id]}" # scan.id = _id in Elastic
		}
	}
	else {
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "logstash_internal"
			password => "${LOGSTASH_INTERNAL_PASSWORD}"
		}
	}
}
